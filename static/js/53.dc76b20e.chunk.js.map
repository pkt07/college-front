{"version":3,"sources":["views/Buttons/Buttons/Buttons.js"],"names":["Forms","props","state","handleChange","bind","register","event","comingName","this","setState","name","target","value","notation","fees","duration","availableSeat","fetch","method","headers","body","JSON","stringify","courseNotation","Number","then","Response","json","Result","console","log","response_code","alert","history","push","className","xs","md","htmlFor","id","size","type","onChange","color","onClick","Component"],"mappings":"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","file":"static/js/53.dc76b20e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Badge,\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n} from 'reactstrap';\nimport TagsInput from 'react-tagsinput';\nimport 'react-tagsinput/react-tagsinput.css'\nclass Forms extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \"name\":\"\",\n      \"availableSeat\":\"\",\n      \"fees\":\"\",\n      \"duration\":\"\",\n      \"notation\":\"\",\n    };\n      this.handleChange = this.handleChange.bind(this);\n      this.register = this.register.bind(this);\n  }\n       handleChange(event,comingName) {\n         if(comingName == 'name')\n           {\n                this.setState({name:event.target.value});\n           }\n           if(comingName == 'notation')\n           {\n                this.setState({notation:event.target.value});\n           }\n         if(comingName == 'fees')\n          {\n               this.setState({fees:event.target.value});\n          }\n          if(comingName == 'duration')\n               {\n                    this.setState({duration:event.target.value});\n               }\n           if(comingName == 'availableSeat')\n               {\n                    this.setState({availableSeat:event.target.value});\n               }\n        }\n        \n    register(event) {\n    fetch('https://api.cedu.in/V2/api/addCourse', {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: this.state.name,\n        courseNotation:this.state.notation,\n        duration: Number(this.state.duration),\n        fees: Number(this.state.fees),\n        availableSeat: Number(this.state.availableSeat)\n      })\n    }).then((Response) => Response.json())\n      .then((Result) => {\n        console.log(Result)\n        if (Result.response_code == 200){\n           alert(\" New Course registered successfully\");\n           this.props.history.push(\"/Dashboard\");\n        }     \n        else{\n          alert('Server error !!!!!Please Try Again');\n        }\n          \n      })\n  }\n  render() {\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n          <Col xs=\"12\">\n              <Card>\n                <CardHeader>\n                  <i className=\"fa fa-edit\"></i>Course Registration Form\n                </CardHeader>\n                  <CardBody>\n                    <Form className=\"form-horizontal\">\n                      <Row>\n                      <Col xs=\"12\" md=\"6\">\n                      <FormGroup>\n                        <Label htmlFor=\"prependedInput\">Course Name</Label>\n                        <div className=\"controls\">\n                            <Input id=\"prependedInput\" size=\"16\" type=\"text\" onChange={(event)=> {this.handleChange(event,'name')}}/>\n                        </div>\n                      </FormGroup>\n                      </Col>\n                      <Col xs=\"12\" md=\"6\">\n                      <FormGroup>\n                        <Label htmlFor=\"prependedInput\">Course Notation</Label>\n                        <div className=\"controls\">\n                            <Input id=\"prependedInput\" size=\"16\" type=\"text\" onChange={(event)=> {this.handleChange(event,'notation')}}/>\n                        </div>\n                      </FormGroup>\n                      </Col>\n                      </Row>\n                      <Row>\n                          <Col xs=\"12\" md=\"6\">\n                            <FormGroup>\n                              <Label htmlFor=\"appendedInput\">Duration</Label>\n                              <div className=\"controls\">\n                                  <Input id=\"appendedInput\" size=\"16\" type=\"text\" onChange={(event)=> {this.handleChange(event,'duration')}}/>\n                              </div>\n                            </FormGroup>\n                          </Col>\n                          <Col xs=\"12\" md=\"6\">\n                            <FormGroup>\n                               <Label htmlFor=\"appendedInput\">Available Seat</Label>\n                              <div className=\"controls\">\n                                  <Input id=\"appendedInput\" size=\"16\" type=\"text\" onChange={(event)=> {this.handleChange(event,'availableSeat')}}/>\n                              </div>\n                            </FormGroup>\n                            </Col>\n                      </Row>\n                       \n                            <FormGroup>\n                               <Label htmlFor=\"appendedInput\">Fees</Label>\n                              <div className=\"controls\">\n                                  <Input id=\"appendedInput\" size=\"16\" type=\"text\" onChange={(event)=> {this.handleChange(event,'fees')}}/>\n                              </div>\n                            </FormGroup>\n                      <div className=\"form-actions\">\n                        <Button type=\"submit\" color=\"primary\" onClick={this.register}>Save changes</Button>\n                        <Button color=\"secondary\">Cancel</Button>\n                      </div>\n                    </Form>\n                  </CardBody>\n              </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Forms;\n"],"sourceRoot":""}