{"version":3,"sources":["views/Base/Forms/Forms.js"],"names":["Forms","props","categoryArr","sexArr","handleChangeDob","date","setState","dob","handleChangejDate","joiningDate","state","name","fatherName","motherName","address","Date","courseName","pincode","phone","category","sex","nationality","handleChange","bind","register","handleChangeCat","handleChangeSex","option","this","value","event","comingName","target","console","log","alert","fetch","method","headers","body","JSON","stringify","Number","then","Response","json","Result","response_code","history","push","className","xs","htmlFor","id","size","type","onChange","md","selected","dateFormat","options","color","onClick","Component"],"mappings":"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","file":"static/js/51.41050dea.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n} from 'reactstrap';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\nclass Forms extends Component {\n  categoryArr = [\"General\", \"SC\", \"ST\", \"OBC\"]\n  sexArr = ['Male', 'Female']\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      fatherName: '',\n      motherName: '',\n      address: '',\n      dob: new Date(),\n      joiningDate: new Date(),\n      courseName: '',\n      pincode: '',\n      phone: '',\n      category: null,\n      sex: null,\n      nationality: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.register = this.register.bind(this);\n    this.handleChangeDob = this.handleChangeDob.bind(this);\n    this.handleChangejDate = this.handleChangejDate.bind(this);\n    this.handleChangeCat = this.handleChangeCat.bind(this);\n    this.handleChangeSex = this.handleChangeSex.bind(this);\n\n  }\n  handleChangeDob = date => {\n    this.setState({\n      dob: date\n    });\n  };\n  handleChangejDate = date => {\n    this.setState({\n      joiningDate: date\n    });\n  }\n  handleChangeCat(option){\n    this.setState({ category: option.value });\n  }\n  handleChangeSex(option){\n    this.setState({ sex: option.value });\n  }\n  handleChange(event, comingName) {\n    if (comingName == 'name') {\n      this.setState({ name: event.target.value });\n    }\n    if (comingName == 'phone') {\n      this.setState({ phone: event.target.value });\n    }\n    if (comingName == 'fatherName') {\n      this.setState({ fatherName: event.target.value });\n    }\n    if (comingName == 'motherName') {\n      this.setState({ motherName: event.target.value });\n    }\n    if (comingName == 'address') {\n      this.setState({ address: event.target.value });\n    }\n    if (comingName == 'courseName') {\n      this.setState({ courseName: event.target.value });\n    }\n    if (comingName == 'dob') {\n      this.setState({ dob: event.target.value });\n    }\n    if (comingName == 'pincode') {\n      this.setState({ pincode: event.target.value });\n    }\n    if (comingName == 'nationality') {\n      this.setState({ nationality: event.target.value });\n    }\n  }\n  register(event) {\n    console.log(\"event\", this.state);\n    alert('A name was submitted: ' + this.state.name);\n    fetch('https://api.cedu.in/V2/api/addStudent', {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: this.state.name,\n        phone: Number(this.state.phone),\n        address: this.state.address,\n        fatherName: this.state.fatherName,\n        motherName: this.state.motherName,\n        dob: this.state.dob,\n        category: this.state.category,\n        sex: this.state.sex,\n        joiningDate: this.state.joiningDate,\n        courseName: this.state.courseName,\n        nationality: this.state.nationality,\n        pincode: Number(this.state.pincode)\n      })\n    }).then((Response) => Response.json())\n      .then((Result) => {\n        console.log(Result)\n        if (Result.response_code == 200) {\n          alert(this.state.courseName + \"student registered successfully\");\n          this.props.history.push(\"/Dashboard\");\n        }\n        else\n          alert('Server error !!!!!Please Try Again');\n      })\n  }\n  render() {\n\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n          <Col xs=\"12\">\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-edit\"></i>Student Registration Form\n                </CardHeader>\n              <CardBody>\n                <Form className=\"form-horizontal\">\n                  <FormGroup>\n                    <Label htmlFor=\"prependedInput\">Student Name</Label>\n                    <div className=\"controls\">\n                      <Input id=\"prependedInput\" size=\"16\" type=\"text\" onChange={(event) => { this.handleChange(event, 'name') }} />\n                    </div>\n                  </FormGroup>\n                  <Row>\n                    <Col xs=\"12\" md=\"6\">\n                      <FormGroup>\n                        <Label htmlFor=\"appendedInput\">Father Name</Label>\n                        <div className=\"controls\">\n                          <Input id=\"appendedInput\" size=\"16\" type=\"text\" onChange={(event) => { this.handleChange(event, 'fatherName') }} />\n                        </div>\n                      </FormGroup>\n                    </Col>\n                    <Col xs=\"12\" md=\"6\">\n                      <FormGroup>\n                        <Label htmlFor=\"appendedInput\">Mother Name</Label>\n                        <div className=\"controls\">\n                          <Input id=\"appendedInput\" size=\"16\" type=\"text\" onChange={(event) => { this.handleChange(event, 'motherName') }} />\n                        </div>\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col xs=\"12\" md=\"3\">\n                      <FormGroup>\n                        <Label htmlFor=\"appendedInput\">Course Name</Label>\n                        <div className=\"controls\">\n                          <Input id=\"appendedInput\" size=\"16\" type=\"text\" onChange={(event) => { this.handleChange(event, 'courseName') }} />\n                        </div>\n                      </FormGroup>\n                    </Col>\n                    <Col xs=\"12\" md=\"3\">\n                      <FormGroup>\n                        <Label htmlFor=\"appendedInput\">Date Of Birth</Label>\n                        <div className=\"controls\">\n                          <DatePicker\n                            selected={this.state.dob}\n                            onChange={this.handleChangeDob}\n                            dateFormat='dd/MM/yyyy'\n                          />\n                        </div>\n                      </FormGroup>\n                    </Col>\n                    <Col xs=\"12\" md=\"3\">\n                      <FormGroup>\n                        <Label htmlFor=\"appendedInput\">Phone Number</Label>\n                        <div className=\"controls\">\n                          <Input id=\"appendedInput\" size=\"16\" type=\"text\" onChange={(event) => { this.handleChange(event, 'phone') }} />\n                        </div>\n                      </FormGroup>\n                    </Col>\n                    <Col xs=\"12\" md=\"3\">\n                      <FormGroup>\n                        <Label htmlFor=\"appendedInput\">Pincode</Label>\n                        <div className=\"controls\">\n                          <Input id=\"appendedInput\" size=\"16\" type=\"text\" onChange={(event) => { this.handleChange(event, 'pincode') }} />\n                        </div>\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col xs=\"12\" md=\"3\">\n                      <FormGroup>\n                        <Label htmlFor=\"appendedInput\">Joining Date</Label>\n                        <div className=\"controls\">\n                          <DatePicker\n                            selected={this.state.joiningDate}\n                            onChange={this.handleChangejDate}\n                            dateFormat='dd/MM/yyyy'\n                          />\n                        </div>\n                      </FormGroup>\n                    </Col>\n                    <Col xs=\"12\" md=\"3\">\n                      <FormGroup>\n                        <Label htmlFor=\"appendedInput\">Nationality</Label>\n                        <div className=\"controls\">\n                          <Input id=\"appendedInput\" size=\"16\" type=\"text\" onChange={(event) => { this.handleChange(event, 'nationality') }} />\n                        </div>\n                      </FormGroup>\n                    </Col>\n                    <Col xs=\"12\" md=\"3\">\n                      <FormGroup>\n                        <Label htmlFor=\"appendedInput\">Category</Label>\n                        <div className=\"controls\">\n                          <Dropdown options={this.categoryArr}  onChange={this.handleChangeCat} value={this.state.category}/>\n                        </div>\n                      </FormGroup>\n                    </Col>\n                    <Col xs=\"12\" md=\"3\">\n                      <FormGroup>\n                        <Label htmlFor=\"appendedInput\">Sex</Label>\n                        <div className=\"controls\">\n                        <Dropdown options={this.sexArr}  onChange={this.handleChangeSex} value={this.state.sex}/>\n                        </div>\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <FormGroup>\n                    <Label htmlFor=\"appendedInput\">Address</Label>\n                    <div className=\"controls\">\n                      <Input id=\"appendedInput\" size=\"16\" type=\"textarea\" onChange={(event) => { this.handleChange(event, 'address') }} />\n                    </div>\n                  </FormGroup>\n                  <div className=\"form-actions\">\n                    <Button type=\"submit\" color=\"primary\" onClick={this.register}>Save changes</Button>\n                    <Button color=\"secondary\">Cancel</Button>\n                  </div>\n                </Form>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Forms;\n"],"sourceRoot":""}