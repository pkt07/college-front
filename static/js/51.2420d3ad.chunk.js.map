{"version":3,"sources":["views/Base/Forms/Forms.js"],"names":["Forms","props","categoryArr","sexArr","minor","disable","handleChangeDob","date","setState","dob","handleChangejDate","joiningDate","state","name","fatherName","motherName","address","Date","courseName","pincode","phone","category","sex","nationality","adharNumber","handleChange","bind","register","handleChangeCat","handleChangeSex","handleChangeMinor","handleChangeDisable","handleChangeEnroll","handleTag","this","fetchOptions","fetch","method","headers","then","res","json","values","console","log","enrollType","response","option","value","target","tags","event","comingName","adhar","alert","body","JSON","stringify","Number","subject","Response","Result","response_code","history","push","className","xs","htmlFor","id","size","type","onChange","md","map","index","key","selected","dateFormat","options","color","onClick","Component"],"mappings":"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","file":"static/js/51.2420d3ad.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n} from 'reactstrap';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport TagsInput from 'react-tagsinput';\nimport 'react-tagsinput/react-tagsinput.css'\nclass Forms extends Component {\n  categoryArr = [\"General\", \"General/EWS\", \"SC\", \"ST\", \"OBC\"]\n  sexArr = ['Male', 'Female']\n  minor=[\"Yes\",\"No\"]\n  disable=[\"Yes\",\"No\"]\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      fatherName: '',\n      motherName: '',\n      address: '',\n      dob: new Date(),\n      joiningDate: new Date(),\n      courseName: '',\n      pincode: '',\n      phone: '',\n      category: null,\n      sex: null,\n      nationality: '',\n      minor:null,\n      disable:null,\n      adharNumber:'',\n      \"enrollType\":[],\n      \"tags\": []\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.register = this.register.bind(this);\n    this.handleChangeDob = this.handleChangeDob.bind(this);\n    this.handleChangejDate = this.handleChangejDate.bind(this);\n    this.handleChangeCat = this.handleChangeCat.bind(this);\n    this.handleChangeSex = this.handleChangeSex.bind(this);\n    this.handleChangeMinor = this.handleChangeMinor.bind(this);\n    this.handleChangeDisable = this.handleChangeDisable.bind(this);\n    this.handleChangeEnroll = this.handleChangeEnroll.bind(this);\n    this.handleTag = this.handleTag.bind(this);\n  }\n  componentDidMount(){\n    this.fetchOptions()\n}   \n fetchOptions(){\n    fetch('https://api.cedu.in/V2/api/getCourse', {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n    }).then((res) => {\n            return res.json();\n        }).then((json) => {\n           let values = json;\n            console.log(\"sdafsa\",values)\n            this.setState({enrollType: values.response})\n            console.log(\"SDfsd\",this.state.enrollType);\n        });\n}\n  handleChangeDob = date => {\n    this.setState({\n      dob: date\n    });\n  };\n  handleChangejDate = date => {\n    this.setState({\n      joiningDate: date\n    });\n  }\n  handleChangeCat(option){\n    this.setState({ category: option.value });\n  }\n  handleChangeSex(option){\n    this.setState({ sex: option.value });\n  }\n  handleChangeMinor(option){\n    this.setState({ minor: option.value });\n  }\n  handleChangeDisable(option){\n    this.setState({ disable: option.value });\n  }\n  handleChangeEnroll(option) {\n    console.log(\"dsfsd\",option.target.value)\n    this.setState({ courseName: option.target.value});\n      \n      // this.setState({ studentInfo: event.value });\n}\nhandleTag(tags) {\n  this.setState({tags})\n}\n  handleChange(event, comingName) {\n    if (comingName == 'name') {\n      this.setState({ name: event.target.value });\n    }\n    if (comingName == 'phone') {\n      this.setState({ phone: event.target.value });\n    }\n    if (comingName == 'fatherName') {\n      this.setState({ fatherName: event.target.value });\n    }\n    if (comingName == 'motherName') {\n      this.setState({ motherName: event.target.value });\n    }\n    if (comingName == 'address') {\n      this.setState({ address: event.target.value });\n    }\n    if (comingName == 'adhar') {\n      this.setState({ adhar: event.target.value });\n    }\n    if (comingName == 'dob') {\n      this.setState({ dob: event.target.value });\n    }\n    if (comingName == 'pincode') {\n      this.setState({ pincode: event.target.value });\n    }\n    if (comingName == 'nationality') {\n      this.setState({ nationality: event.target.value });\n    }\n  }\n  register(event) {\n    console.log(\"event\", this.state);\n    alert('A name was submitted: ' + this.state.name);\n    fetch('https://api.cedu.in/V2/api/addStudent', {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: this.state.name,\n        phone: Number(this.state.phone),\n        address: this.state.address,\n        fatherName: this.state.fatherName,\n        motherName: this.state.motherName,\n        dob: this.state.dob,\n        category: this.state.category,\n        sex: this.state.sex,\n        minor:this.state.minor,\n        disable:this.state.disable,\n        adhar:this.state.adhar,\n        joiningDate: this.state.joiningDate,\n        courseName: this.state.courseName,\n        nationality: this.state.nationality,\n        pincode: Number(this.state.pincode),\n        subject:this.state.tags\n      })\n    }).then((Response) => Response.json())\n      .then((Result) => {\n        console.log(Result)\n        if (Result.response_code == 200) {\n          alert(this.state.courseName + \"student registered successfully\");\n          this.props.history.push(\"/Dashboard\");\n        }\n        else\n          \n          alert('Server error !!!!!Please Try Again');\n      })\n  }\n  render() {\n\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n          <Col xs=\"12\">\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-edit\"></i>Student Registration Form\n                </CardHeader>\n              <CardBody>\n                <Form className=\"form-horizontal\">\n                  <FormGroup>\n                    <Label htmlFor=\"prependedInput\">Student Name</Label>\n                    <div className=\"controls\">\n                      <Input id=\"prependedInput\" size=\"16\" type=\"text\" onChange={(event) => { this.handleChange(event, 'name') }} />\n                    </div>\n                  </FormGroup>\n                  <Row>\n                    <Col xs=\"12\" md=\"6\">\n                      <FormGroup>\n                        <Label htmlFor=\"appendedInput\">Father Name</Label>\n                        <div className=\"controls\">\n                          <Input id=\"appendedInput\" size=\"16\" type=\"text\" onChange={(event) => { this.handleChange(event, 'fatherName') }} />\n                        </div>\n                      </FormGroup>\n                    </Col>\n                    <Col xs=\"12\" md=\"6\">\n                      <FormGroup>\n                        <Label htmlFor=\"appendedInput\">Mother Name</Label>\n                        <div className=\"controls\">\n                          <Input id=\"appendedInput\" size=\"16\" type=\"text\" onChange={(event) => { this.handleChange(event, 'motherName') }} />\n                        </div>\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col xs=\"12\" md=\"3\">\n                      <FormGroup>\n                        <Label htmlFor=\"appendedInput\">Course Name</Label>\n                        <div className=\"controls\">\n                        <select className=\"form-control\" onChange={this.handleChangeEnroll}>\n          <option>---select---</option>\n            {\n            this.state.enrollType.map((option, index) => \n            (<option key={index} value={option.name}>{option.name}</option>))\n            }\n</select>\n                        </div>\n                      </FormGroup>\n                    </Col>\n                   \n\n                    <Col xs=\"12\" md=\"3\">\n                      <FormGroup>\n                        <Label htmlFor=\"appendedInput\">Date Of Birth</Label>\n                        <div className=\"controls\">\n                          <DatePicker\n                            selected={this.state.dob}\n                            onChange={this.handleChangeDob}\n                            dateFormat='dd/MM/yyyy'\n                          />\n                        </div>\n                      </FormGroup>\n                    </Col>\n                    <Col xs=\"12\" md=\"3\">\n                      <FormGroup>\n                        <Label htmlFor=\"appendedInput\">Phone Number</Label>\n                        <div className=\"controls\">\n                          <Input id=\"appendedInput\" size=\"16\" type=\"text\" onChange={(event) => { this.handleChange(event, 'phone') }} />\n                        </div>\n                      </FormGroup>\n                    </Col>\n                    <Col xs=\"12\" md=\"3\">\n                      <FormGroup>\n                        <Label htmlFor=\"appendedInput\">Pincode</Label>\n                        <div className=\"controls\">\n                          <Input id=\"appendedInput\" size=\"16\" type=\"text\" onChange={(event) => { this.handleChange(event, 'pincode') }} />\n                        </div>\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                      <Col xs=\"12\" md=\"12\">\n                      <Label htmlFor=\"prependedInput\">Teaching Subject</Label>\n                        <TagsInput id = \"prependedInput\" value={this.state.tags} onChange={this.handleTag} />\n                      </Col>\n                      </Row>\n                  <Row>\n                    <Col xs=\"12\" md=\"3\">\n                      <FormGroup>\n                        <Label htmlFor=\"appendedInput\">Joining Date</Label>\n                        <div className=\"controls\">\n                          <DatePicker\n                            selected={this.state.joiningDate}\n                            onChange={this.handleChangejDate}\n                            dateFormat='dd/MM/yyyy'\n                          />\n                        </div>\n                      </FormGroup>\n                    </Col>\n                    <Col xs=\"12\" md=\"3\">\n                      <FormGroup>\n                        <Label htmlFor=\"appendedInput\">Nationality</Label>\n                        <div className=\"controls\">\n                          <Input id=\"appendedInput\" size=\"16\" type=\"text\" onChange={(event) => { this.handleChange(event, 'nationality') }} />\n                        </div>\n                      </FormGroup>\n                    </Col>\n                    <Col xs=\"12\" md=\"3\">\n                      <FormGroup>\n                        <Label htmlFor=\"appendedInput\">Category</Label>\n                        <div className=\"controls\">\n                          <Dropdown options={this.categoryArr}  onChange={this.handleChangeCat} value={this.state.category}/>\n                        </div>\n                      </FormGroup>\n                    </Col>\n                    <Col xs=\"12\" md=\"3\">\n                      <FormGroup>\n                        <Label htmlFor=\"appendedInput\">Sex</Label>\n                        <div className=\"controls\">\n                        <Dropdown options={this.sexArr}  onChange={this.handleChangeSex} value={this.state.sex}/>\n                        </div>\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                  <Col xs=\"12\" md=\"4\">\n                      <FormGroup>\n                        <Label htmlFor=\"appendedInput\">Minor</Label>\n                        <div className=\"controls\">\n                          <Dropdown options={this.minor}  onChange={this.handleChangeMinor} value={this.state.minor}/>\n                        </div>\n                      </FormGroup>\n                    </Col>\n                    <Col xs=\"12\" md=\"4\">\n                      <FormGroup>\n                        <Label htmlFor=\"appendedInput\">Disable</Label>\n                        <div className=\"controls\">\n                          <Dropdown options={this.disable}  onChange={this.handleChangeDisable} value={this.state.disable}/>\n                        </div>\n                      </FormGroup>\n                    </Col>\n                    <Col xs=\"12\" md=\"4\">\n                      <FormGroup>\n                        <Label htmlFor=\"appendedInput\">Adhar</Label>\n                        <div className=\"controls\">\n                          <Input id=\"appendedInput\" size=\"16\" type=\"text\" onChange={(event) => { this.handleChange(event, 'adhar') }} />\n                        </div>\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <FormGroup>\n                    <Label htmlFor=\"appendedInput\">Address</Label>\n                    <div className=\"controls\">\n                      <Input id=\"appendedInput\" size=\"16\" type=\"textarea\" onChange={(event) => { this.handleChange(event, 'address') }} />\n                    </div>\n                  </FormGroup>\n                  <div className=\"form-actions\">\n                    <Button type=\"submit\" color=\"primary\" onClick={this.register}>Save changes</Button>\n                    <Button color=\"secondary\">Cancel</Button>\n                  </div>\n                </Form>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Forms;\n"],"sourceRoot":""}